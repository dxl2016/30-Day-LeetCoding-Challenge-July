# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def levelOrderBottom(self, root: TreeNode) -> List[List[int]]:
        temp = {}
        def dfs(node, level):
            if not node:
                return
            
            if level not in temp:
                temp[level] = [node.val]
            else:
                temp[level] += [node.val]
                
            dfs(node.left, level+1)
            dfs(node.right, level+1)
           
        dfs(root, 0)
        # print(temp)
        temp = sorted(temp.items(), reverse=True, key=lambda x:x[0])
        ans = []
        for k,items in temp:
            ans.append(items)
        
        return ans

